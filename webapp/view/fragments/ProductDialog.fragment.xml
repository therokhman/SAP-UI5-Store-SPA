<core:FragmentDefinition
        xmlns="sap.m"
        xmlns:f="sap.ui.layout.form"
        xmlns:core="sap.ui.core" >
    <Dialog
            id="productDialog"
            title="{= ${viewModel>/bIsCreate} ? ${i18n>createProductFragmentTitle} : ${i18n>editProductFragmentTitle} }"
            afterClose=".onAfterClose">
        <f:SimpleForm
                id="formProduct"
                maxContainerCols="1"
                layout="ResponsiveGridLayout"
                labelSpanL="12"
                emptySpanL="0"
                labelSpanM="12"
                emptySpanM="0"
                columnsL="1"
                columnsM="1">
            <f:content>
                <Label text="{i18n>productFragmentLabelName}" labelFor="nameInput"/>
                <Input placeholder="{i18n>productFragmentNameInputPlaceholder}"
                    id="nameInput"
                    required="true" 				
                    value="{
                        path: 'Name', 
                        type: 'sap.ui.model.type.String',
                        constraints: {
                            minLength: 1
                        }}"
                    liveChange="onLiveChangeProduct"
                    valueLiveUpdate="true"
                    fieldGroupIds="productFieldGroup"/>

                <Label text="{i18n>productFragmentLabelPrice}" labelFor="priceInput"/>
                <Input placeholder="{i18n>productFragmentPriceInputPlaceholder}"
                    id="priceInput"
                    required="true"
                    description="USD" 
                    value="{
                        path: 'Price', 
                        type: 'sap.ui.model.type.Integer',
                        constraints: {
                            minimum: 1
                        }}"
                    liveChange="onLiveChangeProduct"
                    valueLiveUpdate="true"
                    fieldGroupIds="productFieldGroup"/>

                <Label text="{i18n>productFragmentLabelSpecs}" labelFor="specsInput"/>
                <Input placeholder="{i18n>productFragmentSpecsInputPlaceholder}"
                    id="specsInput"
                    required="true" 
                    value="{
                        path: 'Specs',
                        type: 'sap.ui.model.type.String',
                        constraints: {
                            minLength: 1
                        }}"
                    liveChange="onLiveChangeProduct"
                    valueLiveUpdate="true"
                    fieldGroupIds="productFieldGroup"/>

                <Label text="{i18n>productFragmentLabelRating}" labelFor="ratingInput"/>
                <Input placeholder="{i18n>productFragmentRatingInputPlaceholder}"
                    id="ratingInput"
                    required="true"
                    value="{
                        path: 'Rating', 
                        type: 'sap.ui.model.type.Integer',
                        constraints: {
                            minimum: 1,
                            maximum: 5
                        }}"
                    liveChange="onLiveChangeProduct" 
                    valueLiveUpdate="true"
                    fieldGroupIds="productFieldGroup"/>

                <Label text="{i18n>productFragmentLabelSupplierInfo}" labelFor="supplierInfoInput"/>
                <Input placeholder="{i18n>productFragmentSupplierInfoInputPlaceholder}"
                    id="supplierInfoInput"
                    required="true"
                    value="{
                        path: 'SupplierInfo', 
                        type: 'sap.ui.model.type.String',
                        constraints: {
                            minLength: 1
                        }}"
                    liveChange="onLiveChangeProduct" 
                    valueLiveUpdate="true"
                    fieldGroupIds="productFieldGroup"/>

                <Label text="{i18n>productFragmentLabelMadeIn}" labelFor="madeInInput"/>
                <Input placeholder="{i18n>productFragmentMadeInInputPlaceholder}"
                    id="madeInInput"
                    required="true"
                    value="{path: 'MadeIn', 
                        type: 'sap.ui.model.type.String',
                        constraints: {
                            minLength: 1
                        }}"
                    liveChange="onLiveChangeProduct"
                    valueLiveUpdate="true"
                    fieldGroupIds="productFieldGroup"/>

                <Label text="{i18n>productFragmentLabelProductCompanyName}" labelFor="prodNameInput"/>
                <Input placeholder="{i18n>productFragmentProductCompanyNameInputPlaceholder}"
                    id="prodNameInput"
                    required="true"
                    value="{path: 'ProductionCompanyName', 
                        type: 'sap.ui.model.type.String',
                        constraints: {
                            minLength: 1
                        }}"
                    liveChange="onLiveChangeProduct"
                    valueLiveUpdate="true"
                    fieldGroupIds="productFieldGroup"/>

                <Label text="{i18n>productFragmentLabelStatus}" labelFor="statusSelect"/>
                <Select selectedKey="{Status}"
                        required="true"
                        liveChange="onLiveChangeProduct"
                        id="statusSelect"
                        fieldGroupIds="productFieldGroup">
                    <core:Item key="OK" text="Ok"/>
                    <core:Item key="STORAGE" text="Storage"/>
                    <core:Item key="OUT_OF_STOCK" text="Out of stock"/>
                </Select>
            </f:content>
        </f:SimpleForm>

        <buttons>
            <Button text="{= ${viewModel>/bIsCreate} ? ${i18n>createProductFragmentCreateButton} : ${i18n>editProductFragmentUpdateButton} }" press="onDialogProductPress" />
            <Button text="{i18n>createStoreFragmentCloseButton}" press="onDialogCancelProductPress" type="Reject"/>
        </buttons>
    </Dialog>
</core:FragmentDefinition>
